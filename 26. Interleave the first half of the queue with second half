
Given a queue of integers of even length, rearrange the elements by interleaving the first half of the queue with the second half of the queue.  

Examples:

Input :  1 2 3 4
Output : 1 3 2 4

Input : 11 12 13 14 15 16 17 18 19 20
Output : 11 16 12 17 13 18 14 19 15 20



#include <bits/stdc++.h> 
void interLeaveQueue(queue < int > & q) {
    // Write your code here.
    // With stack 
//     int n= q.size();
//     int nbytwo= n/2;
//     stack<int> s;
//     // 10 20 30 40 50 60 70 80 90 100
//     for(int i=0;i<nbytwo;i++)
//     {
//         s.push(q.front());
//         q.pop();
//     }
//     // q-> 60 70 80 90 100 s-> 10 20 30 40 50
//     while(!s.empty())
//     {
//         q.push(s.top());
//         s.pop();
//     }
//     // q->60 70 80 90 100 50 40 30 20 10
//      for(int i=0;i<nbytwo;i++)
//     {
//         q.push(q.front());
//         q.pop();
//      }
//     for(int i=0;i<nbytwo;i++)
//     {
//         s.push(q.front());
//         q.pop();
//     }
//     // q-> 50 40 30 20 10 s-> 60 70 80 90 100
    
//     while(!s.empty())
//     {
//         q.push(s.top());
//         s.pop();
//         q.push(q.front());
//         q.pop();
//     }
    
    // with queue
    int n= q.size()/2;
    queue<int> p;
    
    for(int i=0;i<n;i++)
    {
        p.push(q.front());
        q.pop();
    }
    while(!p.empty()){
        q.push(p.front());
        p.pop();
        q.push(q.front());
        q.pop();
    }
}
